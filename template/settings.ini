# version 16/08/2022

# expected folder structures in project subfolder
# 
# a-archives/     (needed)
# b-original-img/ (auto-created)
# c-analysed-img/ (auto-created)
# d-cropped-img/  (auto-created)
# e-outlet/       (auto-created)
# settings.ini    (optional)
#
# all ratio are assumed to be : horizontal resolution / vertical resolution
# the default reader ratio is thus : 0.75

[General]

# manga volumes range to process when operate [ firstVolume - lastVolume ]
# will apply for Analyze, Crop and Repack operations
# expected integers 
# (default is : firstVolume = -1, lastVolume = -1 which mean to start from 1 and continue as much as possible)
firstVolume = 
lastVolume =

# sub folder template name for each manga file ( default value will be "T%02d" )
subFolderFmt =

# [true/false] (default is true) default behavior is to drop existing target subfolders then recreate it
cleanupSubFolders =

[Unpack]

# (default is 0) offset to apply to compute the volume Num using the archive file rank (volumeNum = fileRank + offset);
offsetVolumeNum =

# (default is not defined) optionnal pattern to correctly find out the archive rank (in old C like sscanf like form, without quote nor leading or trailing space)
# it should exist at least one character after the %d of the archive rank
# example : = Iron Man #%d %s
# example : = Volume %d.%s          (Volume 1.cbz, ... Volume 22.cbz)
archiveNamingPattern =

# [0-1] (default is 1) ask unpack all images of a single manga file to the same destination folder (without consideration of archive folders structure)
flatUnpack =

#  when extracting image from pdf ...
# [0-1] (default is 0) should we resize the images
resizePdfImage =
wantedHeight =
# (default is %03d-%03d, volumeNum ImageNum )
imageNameFmt =

[Analyse]

# when running Analyse module
# will exclude images ( moved into analysed-img/excludes/ folder ) on following consideration
# empty or undefined keys or values = -1 will disable the check about the key
# expected integers
excludeWidthLessThan     =
excludeWidthGreaterThan  =
excludeHeightLessThan    =
excludeHeightGreaterThan =

# will rotate the image by N degree clockwise (default is 0.0)
rotateImageBy = 

# if rotateImageBy is not = 0.0, apply the rotation only to the image with a ratio greater than
# [integer or Fraction format accepted]
rotateOnlyIfRatioGreaterThan =

# when running Analyse module
# will split each double page image into two separate images
#
#  0     X1        X2      X3            X4   Width
#        |          |       |             |     
#  Y1 ------------------------------------------
#        |          |       |             |	
#        |          |       |             |	
#        |   left   |       |   right     |	
#        |   half   |       |   half      |	
#        |          |       |             |	
#        |          |       |             |	
#  Y2 ------------------------------------------
#        |          |       |             |	
#  Height 
# forceSplitDoublePageImage [0-1] (default is 0)
forceSplitDoublePageImage =
# splitOnlyIfRatioGreaterThan [integer or Fraction format accepted]
splitOnlyIfRatioGreaterThan =
# firstPageIsLeftHalf [0-1] (default is 0)
firstPageIsLeftHalf =
# split..Ratio [Fraction format accepted]
splitY1Ratio =
splitY2Ratio =
splitX1Ratio =
splitX2Ratio =
splitX3Ratio =
splitX4Ratio =

[AutoCropper]

# [0-1] just draw cropping the lines instead of cropping (default=0)
drawCroppingLine =

# detection parameters ...

# [0-1] try to crop white area margin (default=1)
cropWhiteArea = 
# % of pixels in the row/colum that will mean the start of the drawing area (the usefull area to keep)
# 0.25 = 25% (default=0.005 => 0.5%)
# expected floating point number
nonWhiteNbRatio = 
# pixel will be considered non white if below this grey level (default=175)
# the smaller is this number lead to smaller final keept zone
# expected integer
nonWhiteLevel = 

# [0-1] try to crop black area margin (default=1)
cropBlackArea = 
# % of pixels in the row/colum that will mean the start of the drawing area (the usefull area to keep)
# 0.25 = 25% (default=0.005 => 0.5%)
# expected floating point number
nonBlackNbRatio = 
# pixel will be considere non black if greater than this grey level (default=80)
# the greater is this number lead to smaller final keept zone
# expected integers
nonBlackLevel = 
# ignore these pixels close to the borders as it could include some scan artifacts (default=0)
# if borderMarginToIgnore = 5 -> ignore the 5 pixels zone close to the border
# expected integer
borderMarginToIgnore = 

# specific screen ratio of the reader
# expected a fractionnal (vertical resolution / horizontal resolution ) eg : 1872/1404 (default is -1/1) 
# 1872/1404 is for my reader : a Pocketbook InkPad Color 7.8 inches screen 
# B & W Screen resolution = 1872 x 1404 (300 PPI)
# Color Screen resolution =  624 x  468 (100 PPI)
# if this is specified ( > 0 ), the horizontal cropping will be done only if the result ratio would not be beyond the reader one
readerRatio=

# expected page numbers position (be wide)
# if there is only one page number location then do not set right1 & right2
#            left1         left2                 right1      right2   
#              v             v                     v            v
# up   ->
#                page number                         page number
# down ->

# original image width (in pixels) on which the measurement has been done
# expected integers
fullWidth         =
pageNumbersLeft1  =
pageNumbersLeft2  =
pageNumbersRight1 =
pageNumbersRight2 =

# original image height (in pixels) on which the measurement has been done
# expected integers
fullHeight       =
pageNumbersUp    =
pageNumbersDown  =

# padding to keep around if possible on the cropped image (default=1)
horizontalPadding =
verticalPadding   =

# dont crop automatically but move in tocheck/ folder ...
# if final width/height is less than this fraction of the original size ( default is : 70/100 and 70/100 ) 0/100 and 0/100 would disabe the check
# expected a fractionnal eg : 1185/1677
toCheckCroppedFinalWidthRatio  =
toCheckCroppedFinalHeightRatio =

[Repack]

# archive to generate format : cbz/pdf/both (default is both)
format =
# name of generated document using volumeNo (default is Config.projetName + " T%02d")
# expected a string without quote nor leading or trailing space
filenameFmt =
# title of document using volumeNo (default is Config.projetName + " No %d")
# expected a string without quote nor leading or trailing space
titleFmt   =
# author (default is N/A)
# expected a string without quote nor leading or trailing space 
author     =
